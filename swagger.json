{
    "info": {
        "description": "This is an API that tests swagger integration",
        "license": {
            "name": "MIT",
            "url": "http://mit.com"
        },
        "title": "Todo API",
        "version": "1.0"
    },
    "paths": {
        "/api/articles": {
            "get": {
                "parameters": [
                    {
                        "format": "yyyy-mm-ddThh:MM:ssZ",
                        "in": "query",
                        "name": "created_at",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "yyyy-mm-ddThh:MM:ssZ",
                        "in": "query",
                        "name": "created_until",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "yyyy-mm-ddThh:MM:ssZ",
                        "in": "query",
                        "name": "created_since",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "author",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "Date",
                            "Author",
                            "Category"
                        ],
                        "in": "query",
                        "name": "sortBy",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Invalid `sortBy` or `content` or `title` or `category` or `author` or `created_since` or `created_until` or `created_at`"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/api/articles/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid `id`"
                    }
                }
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid `id`"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `id`"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid `id`"
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `id`"
                    }
                }
            }
        }
    },
    "swagger": "2.0"
}